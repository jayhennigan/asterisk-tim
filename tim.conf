[TIM]
; Paul Seward - https://github.com/paulseward/asterisk-tim

exten => s,1,Set(tz=Europe/London) ; Change this to be your timezone, see /usr/share/zoneinfo for other options

; Check the voice parameter matches one of the voices available, default to PAT
exten => s,n,Set(VOICE=${FILTER(ABCDEFGHIJKLMNOPQRSTUVWXYZ,${TOUPPER(${ARG1})})})
exten => s,n,GotoIf($["${VOICE}":"GORDON"]?set_gordon)
exten => s,n,GotoIf($["${VOICE}":"ETHEL"]?set_ethel)
exten => s,n,GotoIf($["${VOICE}":"PAT"]?set_pat)
exten => s,n,Goto(set_pat)

; Use Gordon Gow (Australia)
exten => s,n(set_gordon),Set(VOICE="gordon_gow")
exten => s,n,Goto(tim_ringtone)

; Use Ethel Cain (UK) - AUDIO NOT YET AVAILABLE so return congestion tone
; exten => s,n(set_ethel),Set(VOICE="ethel_cain")
; exten => s,n,Goto(tim_ringtone)
;
exten => s,n(set_ethel),Progress
exten => s,n,Playtones(congestion)
exten => s,n,Wait(10)
exten => s,n,Hangup

; Use Pat Simmons (UK)
exten => s,n(set_pat),Set(VOICE="pat_simmons")
exten => s,n,Goto(tim_ringtone)

; Send some progress tones (UK ring tone)
exten => s,n(tim_ringtone),Progress()
exten => s,n,Playtones(400*25/400,0/200,400*25/400,0/2000)

; We want to start announcing on a 10second boundary, so work out when the next one is
exten => s,n,Set(FutureTime=$[${EPOCH} + 10])
exten => s,n,Set(FutureTimeMod=$[${FutureTime} % 10])
exten => s,n,Set(SpeakTime=$[${FutureTime} - ${FutureTimeMod}])
exten => s,n,Set(MaxConnectTime=$[${SpeakTime} + 180])

; Spin our heels until it's time to start talking
exten => s,n(tim_countdown_start),GotoIf($[${SpeakTime}-${EPOCH} <= 1]?tim_answer:tim_countdown_wait)
exten => s,n(tim_countdown_wait),wait(1)
exten => s,n,goto(tim_countdown_start)

; Off we go!
exten => s,n(tim_answer),Answer()
exten => s,n,wait(1)
exten => s,n(tim_saytime),Set(SpeakTime=$[${SpeakTime} + 10])

; Work out what time we're announcing
exten => s,n,set(TimHours=${STRFTIME(${SpeakTime},${tz},%I)}) ; Hour in 01-12 form
exten => s,n,set(TimMins=${STRFTIME(${SpeakTime},${tz},%M)})  ; Minute in 00-59 form
exten => s,n,set(TimSecs=${STRFTIME(${SpeakTime},${tz},%S)})  ; Seconds in 00-59 form

; Convert 00 minutes to "oclock"
exten => s,n,set(TimMins=${IF($[ "${TimMins}" = "00"] ? "oclock" : ${TimMins})})

; Convert 00 seconds to "precisely"
exten => s,n,set(TimSecs=${IF($[ "${TimSecs}" = "00"] ? "precisely" : and_${TimSecs}_seconds)})

; Announce the time...
exten => s,n,playback(TIM/${VOICE}/the_phrase)       ; "At the third stroke"
exten => s,n,playback(TIM/${VOICE}/hour_${TimHours}) ; "it will be three"
exten => s,n,playback(TIM/${VOICE}/${TimMins})       ; "45"
exten => s,n,playback(TIM/${VOICE}/${TimSecs})       ; "and 30 seconds"
exten => s,n,playback(TIM/${VOICE}/pips)             ; "pip, pip, pip"

; And go back to the start of playback - delay if too soon
exten => s,n,GotoIf($[${EPOCH} >= ${MaxConnectTime}]?tim_hangup:tim_replay)
exten => s,n(tim_replay),GotoIf($[${EPOCH} >= ${SpeakTime}]?tim_saytime)
exten => s,n,wait(1)
exten => s,n,Goto(tim_replay)
exten => s,n(tim_hangup),Hangup()
